services:
  postgres:
    image: public.ecr.aws/docker/library/postgres:16-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-cityithack}
      - POSTGRES_USER=${POSTGRES_USER:-city}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-city}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB:-cityithack}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-city}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-city}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"

  # frontend отдается внешним nginx, контейнер не требуется

volumes:
  dbdata:


